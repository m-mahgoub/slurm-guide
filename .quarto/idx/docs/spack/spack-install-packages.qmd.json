{"title":"Spack","markdown":{"yaml":{"title":"Spack","engine":"knitr","execute":{"freeze":true}},"headingText":"Installing Packages in Spack","containsRefs":false,"markdown":"\n\n\nThis guide provides a step-by-step walkthrough for installing the `cowsay` package and module using Spack on the Compute2 SLURM cluster. `cowsay` is a fun utility that generates ASCII art of a cow saying a message. While installing `cowsay` is straightforward, there are some steps specific to the RIS Compute2 cluster that need to be followed to ensure compatibility.\n\n## Set Spack Environment\n\nBefore installing any packages for the first time, you need to configure Spack to work correctly with the Compute2 SLURM cluster.\n\nFirst, set some Spack environment variables. This can be easily done by sourcing `${SPACK_ROOT}/share/spack/setup-env.sh`:\n\n```bash\n# Get the Spack root directory\nSPACK_ROOT=$(spack location -r)\n\n# Source the Spack environment setup script\n. \"$SPACK_ROOT/share/spack/setup-env.sh\"\n```\n\n:::{.callout-note}\nYou need to run the above source command every time you want to install a new package with Spack. Alternatively, you can add it to your `.bashrc` or `.bash_profile` to make it persistent across sessions, but be cautious as it may interfere with other environments.\n:::\n\n## Configure Spack for Compute2\n\nThere are a few configurations that need to be set up before you can successfully install packages with Spack on Compute2. These are done once when you install your first package with Spack.\n\n### Configure GCC Compiler\n\nCompute2 currently uses GCC 13.1.0 as the default compiler. You need to ensure that Spack is configured to use this version of GCC.\n\n#### Check Current Compiler Configuration\n\nTo check the current compiler configuration in Spack, run:\n\n```{bash}\nspack compilers\n```\n\nIf `gcc@13.1.0` is not listed, you need to load the appropriate module and add it to Spack's list of available compilers. If it is listed, you can skip this step.\n\n#### Add GCC to Spack's Compiler List\n\nTo do this, first check if the GCC module is loaded:\n\n```{bash}\nmodule list\n```\n\nIf `gcc/13.1.0` is not listed, load it using:\n\n```bash\nmodule load gcc/13.1.0\n```\n\nThen, add GCC to Spack's list of available compilers:\n\n```{bash}\nspack compiler find\n```\n\nVerify that the compiler has been successfully added by running:\n\n```{bash}\nspack compilers\n```\n\n### Configure `krb5`\n\nBefore installing any packages, you need to configure `krb5`, which is a dependency for many packages in Spack. This step is crucial to avoid permission issues during package installations. On Compute2, `krb5` is provided as a system package. To ensure that Spack uses the system's `krb5` instead of trying to build its own version, you need to configure it properly.\n\nFirst, find the `krb5` package using Spack's external find command:\n\n```{bash}\nspack external find krb5\n```\n\nThis command finds the `krb5` package and adds it to `~/.spack/packages.yaml`. Confirm that it is added by running:\n\n```{bash}\ncat ~/.spack/packages.yaml\n```\n\nYou should see an entry for `krb5` in the output. This ensures that Spack uses the system's `krb5` package instead of trying to build its own version.\n\n### Install `binutils` Version 2.43.1\n\n`binutils` is a collection of binary tools used for handling object files, libraries, and executables. It is essential for compiling and linking programs, especially when using `gcc`. Currently, the default version of `binutils` on RIS Compute2 is `2.35`. This version has compatibility issues and errors when used with `gcc@13.1.0`. To resolve these issues, you need to install a newer version of `binutils`, specifically `2.43.1`, to ensure compatibility with `gcc@13.1.0` and the RIS Compute2 architecture. This version has been tested and confirmed to work well with the current setup. Additionally, some specific options were determined through trial and error to find the right combination that works effectively with `gcc@13.1.0` and the Compute2 architecture.\n\nFirst, check if the spec for `binutils` with the required version and options is available:\n\n```{bash}\nspack spec binutils@2.43.1 +gas +ld +gold +headers %gcc@13.1.0 ^zlib-ng cflags=\"-mno-avx512f\"\n```\n\nIf no errors are shown, you can proceed to install `binutils` with the specified options:\n\n```{bash}\nspack install binutils@2.43.1 +gas +ld +gold +headers %gcc@13.1.0 ^zlib-ng cflags=\"-mno-avx512f\"\n```\n\n:::{.callout-important}\nSometimes, you might encounter an error like this during installation:\n\n```bash\n/tmp/cc2CRT67.s:31537: Error: no such instruction: `vmovw 14(%rsp),%xmm0'\n```\n\nThis error can be resolved by sourcing the Spack environment setup script again:\n\n```bash\n. \"$SPACK_ROOT/share/spack/setup-env.sh\"\n```\n\nAfter sourcing the script, try the installation command again.\n:::\n\nLoad the installed `binutils`:\n\n```bash\nspack load binutils@2.43.1\n```\n\nAdd `binutils` to the PATH and other environment variables to ensure proper functionality:\n\n```bash\nexport PATH=$(spack location -i binutils@2.43.1)/bin:$PATH\nexport LD_LIBRARY_PATH=$(spack location -i binutils@2.43.1)/lib:$LD_LIBRARY_PATH\nexport AS=$(spack location -i binutils@2.43.1)/bin/as\nexport LD=$(spack location -i binutils@2.43.1)/bin/ld\n```\n\n:::{.callout-note}\nYou need to run the above export commands every time you use Spack to install or build packages. Alternatively, if you use Spack frequently to install tools, it is advisable to add these export commands to your `.bashrc` or `.bash_profile` for convenience.\n:::\n\nVerify that `binutils` is correctly added to the PATH:\n\n```{bash}\nwhich as\nwhich ld\n```\n\n## Install `cowsay`\n\nOnce Spack is initialized, install the `cowsay` package. First, check if `cowsay` is listed in Spack's package repository:\n\n```{bash}\nspack list cowsay\n```\n\nFind available versions of `cowsay`:\n\n```{bash}\nspack info cowsay\n```\n\nInstall the `cowsay` package:\n\n```{bash}\nspack install cowsay\n```\n\nFinally, verify that `cowsay` is installed:\n\n```{bash}\nspack find cowsay\n```\n\n## Load the `cowsay` Module\n\nAfter successfully installing `cowsay`, you need to load its module first before using it. This step is crucial as it sets up the environment variables and paths required for `cowsay` to function correctly. When installing packages with Spack, there are two ways to load the module: using `spack load` or `module load`. To load it using `spack`, you can simply run `spack load cowsay`. This command will automatically set up the environment for `cowsay`, making it ready for use. However, it is recommended to use `module load` for better compatibility with the Compute2 environment. Luckily, with the current setup, spack automatically creates a Tcl module for `cowsay`, that is compatible with the Compute2 module system.\n\n### Add Spack's Module Path to the Module System\n\nTo ensure that the `cowsay` module is recognized by the Compute2 module system, you need to add Spack's module path to the module system. This step is essential for loading the `cowsay` module using `module load`. In the current setup, modules are stored in `/storage2/fs1/dspencer/Active/spencerlab/apps/modules/spack/modules/linux-rhel9-sapphirerapids/`. To append this path to the module system, you can use the following command:\n\n```bash\nexport MODULEPATH=/storage2/fs1/dspencer/Active/spencerlab/apps/modules/spack/modules/linux-rhel9-sapphirerapids/:$MODULEPATH \n```\n\n:::{.callout-note}\nYou can also add the above mentioned Spack modules' path to your `.bashrc` or `.bash_profile` to make it persistent across sessions. This way, you won't have to set it every time you log in.\n:::\n\n### Load the `cowsay` Module\n\nNow that the Spack module path is set, you can load the `cowsay` module using the `module load` command:\n\n```bash\nmodule load cowsay\n```\n\n## Verify the Installation\n\nTo verify that `cowsay` is installed and working correctly, you can run the following command:\n\n```{bash}\ncowsay \"Hello, World!\"\n```\n\nThis command should produce an ASCII art cow saying \"Hello, World!\" If you see the cow, congratulations! You have successfully installed and configured `cowsay` using Spack on Compute2.\n","srcMarkdownNoYaml":"\n\n# Installing Packages in Spack\n\nThis guide provides a step-by-step walkthrough for installing the `cowsay` package and module using Spack on the Compute2 SLURM cluster. `cowsay` is a fun utility that generates ASCII art of a cow saying a message. While installing `cowsay` is straightforward, there are some steps specific to the RIS Compute2 cluster that need to be followed to ensure compatibility.\n\n## Set Spack Environment\n\nBefore installing any packages for the first time, you need to configure Spack to work correctly with the Compute2 SLURM cluster.\n\nFirst, set some Spack environment variables. This can be easily done by sourcing `${SPACK_ROOT}/share/spack/setup-env.sh`:\n\n```bash\n# Get the Spack root directory\nSPACK_ROOT=$(spack location -r)\n\n# Source the Spack environment setup script\n. \"$SPACK_ROOT/share/spack/setup-env.sh\"\n```\n\n:::{.callout-note}\nYou need to run the above source command every time you want to install a new package with Spack. Alternatively, you can add it to your `.bashrc` or `.bash_profile` to make it persistent across sessions, but be cautious as it may interfere with other environments.\n:::\n\n## Configure Spack for Compute2\n\nThere are a few configurations that need to be set up before you can successfully install packages with Spack on Compute2. These are done once when you install your first package with Spack.\n\n### Configure GCC Compiler\n\nCompute2 currently uses GCC 13.1.0 as the default compiler. You need to ensure that Spack is configured to use this version of GCC.\n\n#### Check Current Compiler Configuration\n\nTo check the current compiler configuration in Spack, run:\n\n```{bash}\nspack compilers\n```\n\nIf `gcc@13.1.0` is not listed, you need to load the appropriate module and add it to Spack's list of available compilers. If it is listed, you can skip this step.\n\n#### Add GCC to Spack's Compiler List\n\nTo do this, first check if the GCC module is loaded:\n\n```{bash}\nmodule list\n```\n\nIf `gcc/13.1.0` is not listed, load it using:\n\n```bash\nmodule load gcc/13.1.0\n```\n\nThen, add GCC to Spack's list of available compilers:\n\n```{bash}\nspack compiler find\n```\n\nVerify that the compiler has been successfully added by running:\n\n```{bash}\nspack compilers\n```\n\n### Configure `krb5`\n\nBefore installing any packages, you need to configure `krb5`, which is a dependency for many packages in Spack. This step is crucial to avoid permission issues during package installations. On Compute2, `krb5` is provided as a system package. To ensure that Spack uses the system's `krb5` instead of trying to build its own version, you need to configure it properly.\n\nFirst, find the `krb5` package using Spack's external find command:\n\n```{bash}\nspack external find krb5\n```\n\nThis command finds the `krb5` package and adds it to `~/.spack/packages.yaml`. Confirm that it is added by running:\n\n```{bash}\ncat ~/.spack/packages.yaml\n```\n\nYou should see an entry for `krb5` in the output. This ensures that Spack uses the system's `krb5` package instead of trying to build its own version.\n\n### Install `binutils` Version 2.43.1\n\n`binutils` is a collection of binary tools used for handling object files, libraries, and executables. It is essential for compiling and linking programs, especially when using `gcc`. Currently, the default version of `binutils` on RIS Compute2 is `2.35`. This version has compatibility issues and errors when used with `gcc@13.1.0`. To resolve these issues, you need to install a newer version of `binutils`, specifically `2.43.1`, to ensure compatibility with `gcc@13.1.0` and the RIS Compute2 architecture. This version has been tested and confirmed to work well with the current setup. Additionally, some specific options were determined through trial and error to find the right combination that works effectively with `gcc@13.1.0` and the Compute2 architecture.\n\nFirst, check if the spec for `binutils` with the required version and options is available:\n\n```{bash}\nspack spec binutils@2.43.1 +gas +ld +gold +headers %gcc@13.1.0 ^zlib-ng cflags=\"-mno-avx512f\"\n```\n\nIf no errors are shown, you can proceed to install `binutils` with the specified options:\n\n```{bash}\nspack install binutils@2.43.1 +gas +ld +gold +headers %gcc@13.1.0 ^zlib-ng cflags=\"-mno-avx512f\"\n```\n\n:::{.callout-important}\nSometimes, you might encounter an error like this during installation:\n\n```bash\n/tmp/cc2CRT67.s:31537: Error: no such instruction: `vmovw 14(%rsp),%xmm0'\n```\n\nThis error can be resolved by sourcing the Spack environment setup script again:\n\n```bash\n. \"$SPACK_ROOT/share/spack/setup-env.sh\"\n```\n\nAfter sourcing the script, try the installation command again.\n:::\n\nLoad the installed `binutils`:\n\n```bash\nspack load binutils@2.43.1\n```\n\nAdd `binutils` to the PATH and other environment variables to ensure proper functionality:\n\n```bash\nexport PATH=$(spack location -i binutils@2.43.1)/bin:$PATH\nexport LD_LIBRARY_PATH=$(spack location -i binutils@2.43.1)/lib:$LD_LIBRARY_PATH\nexport AS=$(spack location -i binutils@2.43.1)/bin/as\nexport LD=$(spack location -i binutils@2.43.1)/bin/ld\n```\n\n:::{.callout-note}\nYou need to run the above export commands every time you use Spack to install or build packages. Alternatively, if you use Spack frequently to install tools, it is advisable to add these export commands to your `.bashrc` or `.bash_profile` for convenience.\n:::\n\nVerify that `binutils` is correctly added to the PATH:\n\n```{bash}\nwhich as\nwhich ld\n```\n\n## Install `cowsay`\n\nOnce Spack is initialized, install the `cowsay` package. First, check if `cowsay` is listed in Spack's package repository:\n\n```{bash}\nspack list cowsay\n```\n\nFind available versions of `cowsay`:\n\n```{bash}\nspack info cowsay\n```\n\nInstall the `cowsay` package:\n\n```{bash}\nspack install cowsay\n```\n\nFinally, verify that `cowsay` is installed:\n\n```{bash}\nspack find cowsay\n```\n\n## Load the `cowsay` Module\n\nAfter successfully installing `cowsay`, you need to load its module first before using it. This step is crucial as it sets up the environment variables and paths required for `cowsay` to function correctly. When installing packages with Spack, there are two ways to load the module: using `spack load` or `module load`. To load it using `spack`, you can simply run `spack load cowsay`. This command will automatically set up the environment for `cowsay`, making it ready for use. However, it is recommended to use `module load` for better compatibility with the Compute2 environment. Luckily, with the current setup, spack automatically creates a Tcl module for `cowsay`, that is compatible with the Compute2 module system.\n\n### Add Spack's Module Path to the Module System\n\nTo ensure that the `cowsay` module is recognized by the Compute2 module system, you need to add Spack's module path to the module system. This step is essential for loading the `cowsay` module using `module load`. In the current setup, modules are stored in `/storage2/fs1/dspencer/Active/spencerlab/apps/modules/spack/modules/linux-rhel9-sapphirerapids/`. To append this path to the module system, you can use the following command:\n\n```bash\nexport MODULEPATH=/storage2/fs1/dspencer/Active/spencerlab/apps/modules/spack/modules/linux-rhel9-sapphirerapids/:$MODULEPATH \n```\n\n:::{.callout-note}\nYou can also add the above mentioned Spack modules' path to your `.bashrc` or `.bash_profile` to make it persistent across sessions. This way, you won't have to set it every time you log in.\n:::\n\n### Load the `cowsay` Module\n\nNow that the Spack module path is set, you can load the `cowsay` module using the `module load` command:\n\n```bash\nmodule load cowsay\n```\n\n## Verify the Installation\n\nTo verify that `cowsay` is installed and working correctly, you can run the following command:\n\n```{bash}\ncowsay \"Hello, World!\"\n```\n\nThis command should produce an ASCII art cow saying \"Hello, World!\" If you see the cow, congratulations! You have successfully installed and configured `cowsay` using Spack on Compute2.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"spack-install-packages.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cosmo","brand"],"title":"Spack"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}